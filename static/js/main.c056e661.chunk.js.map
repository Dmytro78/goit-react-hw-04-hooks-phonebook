{"version":3,"sources":["component/Contacts/ContactList.js","component/Form/Form.js","component/Filter/Filter.js","App.js","index.js","component/Form/Form.module.css","component/Contacts/ContactList.module.css"],"names":["ContactList","contacts","onDeleteContact","className","css","list","map","name","number","id","listItem","btn","type","onClick","Form","state","handleInputChange","e","currentTarget","value","setState","submit","preventDefault","reset","props","onSubmit","this","form","label","input","onChange","pattern","title","required","button","Component","Filter","filterInput","filterValue","App","filter","addContact","find","contact","nametoLowerCase","toLowerCase","alert","uuidv4","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","VisibleContacts","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c056e661.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={css.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={css.listItem} key={id}>\r\n          {`${name}: ${number}`}\r\n          <button\r\n            className={css.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.object,\r\n  onDeleteContact: PropTypes.func,\r\n};","import React, { Component } from \"react\";\nimport css from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n };\n  \n  submit = (e) => {\n    e.preventDefault();\n    this.reset();\n    this.props.onSubmit(this.state);\n  }\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n \n\n  render() {\n    return (\n      <form onSubmit={this.submit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filterInput, filterValue }) => {\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={filterInput}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filterInput: PropTypes.func,\n  filterValue: PropTypes.string,\n};\n","import { Component } from \"react\";\r\nimport ContactList from \"./component/Contacts/ContactList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Form from \"./component/Form/Form\";\r\nimport Filter from \"./component/Filter/Filter\";\r\nimport css from \"./App.css\";\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n    componentDidMount() {\r\n    \r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n   \r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const duplicate = this.state.contacts.find(\r\n      (contact) => contact.nametoLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    if (duplicate) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      const contact = {\r\n        name,\r\n        number,\r\n        id: uuidv4(),\r\n      };\r\n\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n   changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n \r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n      this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const VisibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <h1 className={css}>Phonebook</h1>\r\n        <Form onSubmit={this.addContact} />\r\n        <h2 className={css}>Contacts</h2>\r\n        {this.state.contacts.length === 0 ? null :\r\n          <Filter value={filter} onChange={this.changeFilter}\r\n          />}\r\n        {this.state.contacts.length===0? <p> No contacts</p> :\r\n          <ContactList\r\n          contacts={VisibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />}\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__YQElY\",\"button\":\"Form_button__edxox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__U7TlC\",\"listItem\":\"ContactList_listItem__2k8Sa\"};"],"sourceRoot":""}